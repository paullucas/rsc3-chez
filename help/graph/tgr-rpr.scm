;; tgr-rpr (rd)

(letrec ((dust-r 
          (lambda (r lo hi)
            (let ((d (dseq dinf (dwhite 1 lo hi))))
              (t-duty r d 0 0 (u:abs (white-noise r)) 1))))
         (rpr
          (lambda (n t)
            (let ((i (in 2 kr n)))
              (t-rand (mce-channel i 0) (mce-channel i 1) t))))
         (r-set
          (lambda (r)
            (if (> r 0.5)
                (list (random 0.005 0.025) (random 0.05 0.25)
                      (random 0.75 0.95)   (random 1.05 1.25)
                      (random 0.001 0.01)  (random 0.02 0.04)
                      (random 0.1 0.2)     (random 0.2 0.4)
                      (random 0.0 0.45)    (random 0.55 1.0)
                      (random -1 0)        (random 0 1.0))
                (list (random 0.005 0.025) (random 0.05 0.25)
                      (random -1.25 -1.05) (random -0.95 -0.75)
                      (random 0.001 0.01)  (random 0.02 0.04)
                      (random 0.1 0.2)     (random 0.2 0.4)
                      (random 0.0 0.45)    (random 0.55 1.0)
                      (random -1 0)        (random 0 1.0)))))
         (tgr-rpr (let* ((b 10)
                         (clk (dust-r ar (in 1 kr 0) (in 1 kr 1)))
                         (rat (rpr 2 clk))
                         (dur (rpr 4 clk))
                         (pos (mul (rpr 8 clk) (buf-dur kr b)))
                         (pan (rpr 10 clk))
                         (amp (rpr 6 clk)))
                    (out 0 (t-grains 2 clk b rat pos dur pan amp 2))))
         (pattern
          (lambda (fd)
            (send fd (c-setn1 0 (r-set (random 0 1))))
            (thread-sleep (choose (list 0.25 0.75 1.5)))
            (pattern fd)))
         (sf "/home/rohan/audio/metal.wav"))
  (with-sc3
   (lambda (fd)
     (async fd (b-alloc-read 10 sf 0 0))
     (play fd tgr-rpr)
     (pattern fd))))
