;; make.scm - (c) rohan drape, 2005

(define (rate-symbol rate) (ref '(.ir .kr .ar .dr) rate))

(define (uspec-compile s)
  (let* ((name    (uspec-name/constructor s))
	 (name.xr (symbol-concat (list name '.xr)))
	 (name.gr (symbol-concat (list name '.gr))))
    (++ (list `(define ,name.xr (uspec->constructor ,(symbol-++ name '.uspec)))
	      `(define-ugenG ,name.gr ,name.xr))
	(map (lambda (rate) 
	       `(define-ugenS 
		  ,(symbol-concat (list name (rate-symbol rate)))
		  ,name.xr 
		  ,rate))
	     (uspec-rates s)))))

(require (lib "rscD.ss" "rscD"))

(let ((p! (lambda (v) (display*! v (current-output-port))))
      (f  (rsc-file "scheme/ugen/procedures.scm")))
  (unlink*! f)
  (with-output-to-file! 
   f
   (lambda () 
     (p! ";; procedures.scm - (c) rohan drape, 2004-2005")
     (p! ";; THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT")
     (for-each! 
      p! 
      (splice (map uspec-compile uspecs))))))
