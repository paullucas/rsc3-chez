;; operator.scm - (c) rohan drape, 2005

(define +.xr Add.xr)
(define +.gr Add.gr)
(define +.ir Add.ir)
(define +.kr Add.kr)
(define +.ar Add.ar)
(define +.dr Add.dr)

(define *.xr Mul.xr)
(define *.gr Mul.gr)
(define *.ir Mul.ir)
(define *.kr Mul.kr)
(define *.ar Mul.ar)
(define *.dr Mul.dr)

(define -.xr Sub.xr)
(define -.gr Sub.gr)
(define -.ir Sub.ir)
(define -.kr Sub.kr)
(define -.ar Sub.ar)
(define -.dr Sub.dr)

(define /.xr FDiv.xr)
(define /.gr FDiv.gr)
(define /.ir FDiv.ir)
(define /.kr FDiv.kr)
(define /.ar FDiv.ar)
(define /.dr FDiv.dr)

(define %.xr Mod.xr)
(define %.gr Mod.gr)
(define %.ir Mod.ir)
(define %.kr Mod.kr)
(define %.ar Mod.ar)
(define %.dr Mod.dr)

(define =.xr EQ.xr)
(define =.gr EQ.gr)
(define =.ir EQ.ir)
(define =.kr EQ.kr)
(define =.ar EQ.ar)
(define =.dr EQ.dr)

(define <.xr LT.xr)
(define <.gr LT.gr)
(define <.ir LT.ir)
(define <.kr LT.kr)
(define <.ar LT.ar)
(define <.dr LT.dr)

(define >.xr GT.xr)
(define >.gr GT.gr)
(define >.ir GT.ir)
(define >.kr GT.kr)
(define >.ar GT.ar)
(define >.dr GT.dr)

(define <=.xr LE.xr)
(define <=.gr LE.gr)
(define <=.ir LE.ir)
(define <=.kr LE.kr)
(define <=.ar LE.ar)
(define <=.dr LE.dr)

(define >=.xr GE.xr)
(define >=.gr GE.gr)
(define >=.ir GE.ir)
(define >=.kr GE.kr)
(define >=.ar GE.ar)
(define >=.dr GE.dr)
